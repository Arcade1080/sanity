@import 'part:@sanity/base/theme/variables-style';

.root {
  border: var(--input-border-size) solid var(--input-border-color);
  border-radius: var(--input-border-radius);
  overflow: hidden;

  @nest .root.focus & {
    box-shadow: var(--input-box-shadow-thin--focus);
    border-color: var(--input-border-color-focus);
  }

  @nest .root:not(.focus):not(.readOnly):not(.disabled) & {
    @media (hover: hover) {
      @nest &:hover {
        box-shadow: var(--input-box-shadow--hover);
        border-color: var(--input-border-color-hover);
      }
    }
  }

  @nest &.isFullscreen {
    border: 0;
    height: 100%;
    display: flex;
    flex-direction: column;
  }
}

.header {
  position: relative;
  display: flex;
  background-color: var(--input-bg);
  border-bottom: 1px solid var(--hairline-color);
  z-index: 2;

  @nest &.isFullscreen {
    box-sizing: border-box;
    width: 100%;
    border: 0;

    @nest &:after {
      content: '';
      position: absolute;
      left: 0;
      right: 0;
      bottom: -1px;
      border-bottom: 1px solid var(--hairline-color);
    }
  }

  @nest .root.readOnly & {
    background-color: var(--input-bg-disabled);
  }
}

.headerToolbarContainer {
  min-width: 0;
  flex: 1;
  height: 35px;

  @nest .root.isFullscreen & {
    height: 43px;
  }
}

.content {
  height: 15rem;
  position: relative;

  @nest .root.isFullscreen & {
    min-height: 0;
    flex: 1;
    height: 100%;
  }
}

.scrollContainer {
  composes: scrollY from 'part:@sanity/base/theme/layout/scrolling-style';
  background-color: var(--body-bg);
  display: block;
  height: 100%;
  box-sizing: border-box;
  overflow-y: overlay;
  flex-direction: column;
  flex-grow: 1;

  @nest .root.isFullscreen & {
    overflow: auto;

    @media (--screen-medium) {
      padding: var(--medium-padding);
    }
  }
}

.editorWrapper {
  position: relative;
  height: 100%;
  margin: 0 auto;

  @nest .root.isFullscreen & {
    @media (--screen-medium) {
      max-width: calc(640px + var(--medium-padding) * 2);
    }

    @media (--screen-large) {
      max-width: calc(720px + var(--large-padding) * 2);
    }
  }
}

/*
  The flex alignment here is to stretch the editor to
  fit its parrent, and to make the last child selectable for editing
*/

.editor {
  background-color: var(--input-bg);
  position: relative;
  box-sizing: border-box;
  font-family: var(--block-editor-base-font-family);
  min-height: 100%;
  display: flex;
  flex-direction: column;

  @nest .readOnly & {
    background-color: var(--input-bg-disabled);
    color: var(--input-color-read-only);
  }

  @nest .disabled & {
    background-color: var(--input-bg-disabled);
    color: var(--input-color-disabled);
  }

  @nest .focus & {
    background-color: var(--input-bg-focus);
  }

  @nest &.hasBlockExtras {
    margin-right: var(--block-extras-width);
  }

  /* The editable div */

  @nest & > div {
    flex: 1;
    min-height: 0;
    min-height: 100%;
  }

  @nest & > div [data-slate-placeholder='true'] {
    color: var(--input-color-placeholder);
    opacity: 1 !important;
  }

  @nest & > div {
    padding: calc(var(--medium-padding) - var(--extra-small-padding));
    overflow: auto;

    @nest .root.isFullscreen & {
      padding: var(--medium-padding);

      @media (--screen-default) {
        padding: var(--large-padding);
      }

      @media (--screen-large) {
        padding: var(--extra-large-padding);
      }
    }
  }

  /* Text blocks */

  @nest & > div > div:first-child > * {
    margin-top: 0;
  }

  @nest & > div > div:last-child > * {
    margin-bottom: 0;
  }

  /* Block objects */

  @nest & > div > div[class~='pt-object-block'] {
    margin: var(--medium-padding) 0;

    @nest &:first-child {
      margin-top: 0;
    }

    @nest &:last-child {
      margin-top: 0;
    }
  }

  /* space between different types of lists */
  @nest & > div > div[class~='pt-list-item-bullet'] + div[class~='pt-list-item-number'],
    & > div > div[class~='pt-list-item-number'] + div[class~='pt-list-item-bullet'] {
    margin-top: var(--medium-padding);
  }
}

.blockExtras {
  position: relative;
  top: 0;
  width: 100%;

  @nest .root.isFullscreen & {
    width: calc(100% - var(--block-extras-width));
    /* This is needed for the change connectors to render properly in fullscreen mode */
    border: 1px solid transparent;
    box-sizing: border-box;
  }

  @nest .root.isFullscreen .hasNoBlockExtras & {
    width: 100%;
  }
}
